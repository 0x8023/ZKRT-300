C51 COMPILER V9.01   8023                                                                  03/04/2015 01:03:44 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE 8023
OBJECT MODULE PLACED IN .\output\8023.obj
COMPILER INVOKED BY: H:\Program\keil\C51\BIN\C51.EXE program\8023.c DEBUG OBJECTEXTEND PRINT(.\8023.lst) OBJECT(.\output
                    -\8023.obj)

line level    source

   1          #include "./output/8023.h"
   2          xdata struct str_state str_begin,str_now,str_next;//分别为:起始状态/当前状态/目标状态
   3          xdata struct str_parameter str_cod={
   4              /*ui str_cod.mlinerqd*/500,//默认主函数巡线软起动时间为500毫秒
   5              /*ui str_cod.mlineqc*/200,//默认主函数巡线前冲时间为500毫秒
   6          
   7              /*ui str_cod.sj1bzw*/58,
   8              /*ui str_cod.sj1zjw*/800,
   9          
  10              /*ui str_cod.py1qkq*/666,
  11              /*ui str_cod.py1kqz*/684,
  12              /*ui str_cod.py1zkh*/684,
  13              /*ui str_cod.py1khh*/666,
  14              /*ui str_cod.py1qz*/500,
  15              /*ui str_cod.py1zh*/500,
  16              /*ui str_cod.py1kqkh*/1480,
  17              /*ui str_cod.py1qkh*/2122,
  18              /*ui str_cod.py1kqh*/2122,
  19          };
  20          ui var_timer0=0;
  21          void fun_delay(ui par_value,enum varENU_del par_model){
  22   1          ui loc_con=par_value;
  23   1          switch(par_model){
  24   2              case del_us://微秒级延时
  25   2                  while(loc_con-->0){
  26   3                      _nop_();
  27   3                      _nop_();
  28   3                  }
  29   2                  return;
  30   2              case del_ms://毫秒级延时
  31   2                  while(loc_con-->0){
  32   3                      uc loc_i, loc_j;
  33   3                      _nop_();
  34   3                      _nop_();
  35   3                      loc_i=12;
  36   3                      loc_j=168;
  37   3                      do{
  38   4                          while(--loc_j);
  39   4                      }while(--loc_i);
  40   3                  }
  41   2                  return;
  42   2              case del_s://秒级延时
  43   2                  while(loc_con-->0){
  44   3                      uc loc_i, loc_j, loc_k;
  45   3                      loc_i=46;
  46   3                      loc_j=153;
  47   3                      loc_k=245;
  48   3                      do{
  49   4                          do{
  50   5                              while(--loc_k);
  51   5                          }while(--loc_j);
  52   4                      }while(--loc_i);
  53   3                  }
  54   2                  return;
C51 COMPILER V9.01   8023                                                                  03/04/2015 01:03:44 PAGE 2   

  55   2              default:return;
  56   2          }
  57   1      }//延时
  58          void fun_timer0init(){
  59   1          AUXR|=0x80;       //定时器时钟1T模式
  60   1          TMOD&=0xF0;       //设置定时器模式
  61   1          TMOD|=0x01;       //设置定时器模式
  62   1          TL0=0x20;     //设置定时初值
  63   1          TH0=0xD1;     //设置定时初值
  64   1          TF0=0;        //清除TF0标志
  65   1          ET0=1;
  66   1          EA=1;
  67   1      }//1毫秒定时器0初始化
  68          void fun_timer1init(){
  69   1          AUXR&=0xBF;
  70   1          TMOD&=0x0F;
  71   1          TMOD|=0x10;
  72   1          TL1=0xE0;
  73   1          TH1=0xB1;
  74   1          TF1=0;
  75   1          ET1=1;
  76   1          EA=1;
  77   1      }//20毫秒定时器1初始化
  78          void fun_timer0(){
  79   1          TL0=0x20;
  80   1          TH0=0xD1;
  81   1          _nop_();
  82   1          var_timer0++;
  83   1      }//1毫秒定时器0处理函数
  84          void fun_timer1(){
  85   1          TL1=0xE0;
  86   1          TH1=0xB1;
  87   1          _nop_();
  88   1      }//20毫秒定时器1处理函数
  89          void fun_wait(){
  90   1          while(in_start==1);
  91   1          fun_delay(20,del_ms);
  92   1          while(in_start==0);
  93   1          fun_delay(256,del_ms);
  94   1      }//等待按键
  95          void fun_select(enum varENU_sel par_model){
  96   1          if(par_model==sel_58)
  97   1              out_switchselect=0;
  98   1          else if(par_model==sel_912)
  99   1              out_switchselect=1;
 100   1      }//传感器片选
 101          void fun_initialization(){
 102   1          CLK_DIV=0x00;//不分频
 103   1      
 104   1          P0M1=0xff;//P0用于输入
 105   1          P0M0=0x00;//P0不能输出
 106   1          
 107   1          P1M1=0x00;//P1口0-1双向，2中断输入，3-6输入，7输出
 108   1          P1M0=0xfc;//P1口2-7输出
 109   1      
 110   1          P2M1=0xf0;//P2口4-7输入
 111   1          P2M0=0x0f;//P2口0-3输出
 112   1      
 113   1          //PS_2=1;//手抓松传感器置1 $?$
 114   1          //PS_11=1;//升降位置3传感器置1 $?$
 115   1      
 116   1          out_en1=1;//电机1/3使能 $?$
C51 COMPILER V9.01   8023                                                                  03/04/2015 01:03:44 PAGE 3   

 117   1          out_en2=1;//电机2/4使能 $?$
 118   1          //out_motorselect=1;//电机片选为1 $?$
 119   1          //fun_delay(del_ms,1);//延时1毫秒 $?$
 120   1          out_motorselect=0;//电机片选为0 $?$
 121   1          //PS_5=PS_1;// $?$
 122   1      
 123   1          fun_pwminit();//PWM的初始化设置
 124   1          fun_timer0init();//初始化定时器0
 125   1          fun_timer1init();//初始化定时器1
 126   1          fun_port();//初始化串口
 127   1          in_start=1;//按键置1
 128   1      
 129   1          fun_wait();
 130   1      }//初始化
 131          void fun_pwminit(){
 132   1          CCON=0x00;
 133   1          CH=0;
 134   1          CL=0;
 135   1          CMOD=0x00;
 136   1      }//PWM初始化
 137          void fun_pwmr(uc par_value){
 138   1          CCAP0H=CCAP0L=par_value*2.5;//控制输出的占空比
 139   1          CCAPM0=0X42;//8位PWM输出，无中断
 140   1          PCA_PWM0=0x00;
 141   1      }//右路PWM输出
 142          void fun_pwml(uc par_value){
 143   1          CCAP1H=CCAP1L=par_value*2.5;//控制输出的占空比
 144   1          CCAPM1=0X42;//8位PWM输出，无中断
 145   1          PCA_PWM1=0x00;
 146   1      }//左路PWM输出
 147          void fun_startdj(enum varENU_mot par_model,char par_speed){
 148   1          if(par_speed==0)
 149   1              return;
 150   1          else if(par_speed>100)
 151   1              par_speed=100;
 152   1          else if(par_speed<-100)
 153   1              par_speed=-100;
 154   1          switch(par_model){
 155   2              case mot_l://左轮电机
 156   2                  CR=1;
 157   2                  if(par_speed>0){
 158   3                      fun_pwml(par_speed);out_pwml=0;
 159   3                  }
 160   2                  else if(par_speed<0){
 161   3                      fun_pwml(cabs(par_speed));out_pwml=1;
 162   3                  }
 163   2                  break;
 164   2              case mot_r://右轮电机
 165   2                  CR=1;
 166   2                  if(par_speed>0){
 167   3                      fun_pwmr(par_speed);out_pwmr=0;
 168   3                  }
 169   2                  else if(par_speed<0){
 170   3                      fun_pwmr(cabs(par_speed));out_pwmr=1;
 171   3                  }
 172   2                  break;
 173   2              case mot_rl://左右轮同步
 174   2                  CR=1;
 175   2                  if(par_speed>0){
 176   3                      fun_pwml(par_speed);out_pwml=0;
 177   3                      fun_pwmr(par_speed);out_pwmr=0;
 178   3                  }
C51 COMPILER V9.01   8023                                                                  03/04/2015 01:03:44 PAGE 4   

 179   2                  else if(par_speed<0){
 180   3                      fun_pwml(cabs(par_speed));out_pwml=1;
 181   3                      fun_pwmr(cabs(par_speed));out_pwmr=1;
 182   3                  }
 183   2                  break;
 184   2              case mot_dj1://正转为抓紧，反转为松开
 185   2                  out_motorselect=1;
 186   2                  if(par_speed>0)
 187   2                      out_dir1=1;
 188   2                  else if(par_speed<0)
 189   2                      out_dir1=0;
 190   2                  out_en1=0;
 191   2                  break;
 192   2              case mot_dj2://正转是向无电机一方转,反转为向有电机一方转
 193   2                  out_motorselect=1;
 194   2                  if(par_speed>0)
 195   2                      out_dir2=1;
 196   2                  else if(par_speed<0)
 197   2                      out_dir2=0;
 198   2                  out_en2=0;
 199   2                  break;
 200   2              case mot_dj3://向上为正转,向下为反转
 201   2                  out_motorselect=0;
 202   2                  if(par_speed>0)
 203   2                      out_dir1=0;
 204   2                  else if(par_speed<0)
 205   2                      out_dir1=1;
 206   2                  out_en1=0;
 207   2                  break;
 208   2              case mot_dj4://顺时针为正转,逆时针为反转
 209   2                  out_motorselect=0;
 210   2                  if(par_speed>0)
 211   2                      out_dir2=0;
 212   2                  else if(par_speed<0)
 213   2                      out_dir2=1;
 214   2                  out_en2=0;
 215   2                  break;
 216   2              default:
 217   2                  break;
 218   2          }
 219   1      }//启动电机
 220          void fun_stop(enum varENU_mot par_model){
 221   1          switch(par_model){
 222   2              case mot_l:
 223   2                  fun_pwml(0);out_pwml=0;break;
 224   2              case mot_r:
 225   2                  fun_pwmr(0);out_pwmr=0;break;
 226   2              case mot_rl:
 227   2                  CR=0;
 228   2                  fun_pwmr(0);out_pwmr=0;
 229   2                  fun_pwml(0);out_pwml=0;
 230   2                  break;
 231   2              case mot_dj1:
 232   2                  out_motorselect=1;out_dir1=0;out_en1=1;break;
 233   2              case mot_dj2:
 234   2                  out_motorselect=1;out_dir2=0;out_en2=1;break;
 235   2              case mot_dj3:
 236   2                  out_motorselect=0;out_dir1=0;out_en1=1;break;
 237   2              case mot_dj4:
 238   2                  out_motorselect=0;out_dir2=0;out_en2=1;break;
 239   2              default:
 240   2                  break;
C51 COMPILER V9.01   8023                                                                  03/04/2015 01:03:44 PAGE 5   

 241   2          }
 242   1      }//停止电机
 243          void fun_sz1(enum varENU_han par_model){
 244   1          if(par_model==han_s){//手抓松
 245   2              while(1){
 246   3                  fun_startdj(mot_dj1,-100);
 247   3                  while(in_s==1);
 248   3                  fun_delay(20,del_ms);
 249   3                  if(in_s==0)
 250   3                      break;
 251   3              }
 252   2          }
 253   1          else{//手抓紧
 254   2              while(1){
 255   3                  fun_startdj(mot_dj1,100);
 256   3                  while(in_j==1);
 257   3                  fun_delay(20,del_ms);
 258   3                  if(in_j==0)
 259   3                      break;
 260   3              }
 261   2          }
 262   1          fun_stop(mot_dj1);
 263   1          str_begin.szzt=par_model;//存储运行结果
 264   1      }//手抓单步运动
 265          void fun_sj1(enum varENU_sjp par_model){
 266   1          if(par_model==str_begin.sjwz)
 267   1             return;
 268   1          switch(par_model){
 269   2              case sjp_wz1://升降位置1(最上位)
 270   2                  fun_startdj(mot_dj3,100);
 271   2                  fun_select(sel_58);
 272   2                  fun_delay(50,del_ms);
 273   2                  while(1){//只有向上
 274   3                      while(in_wz1==1);
 275   3                      fun_delay(20,del_ms);
 276   3                      if(in_wz1==0){
 277   4                          fun_delay(20,del_ms);
 278   4                          break;                    
 279   4                      }
 280   3                  }
 281   2                  break;
 282   2              case sjp_wz12:
 283   2                  if(par_model>str_begin.sjwz){
 284   3                      fun_startdj(mot_dj3,-100);
 285   3                      fun_delay(str_cod.sj1zjw,del_ms);
 286   3                  }
 287   2                  else{//要去的地方在上面，向上走
 288   3                      fun_sj1(sjp_wz2);
 289   3                      fun_startdj(mot_dj3,100);
 290   3                      fun_delay(str_cod.sj1zjw,del_ms);
 291   3                  }
 292   2                  break;
 293   2              case sjp_wz2://升降位置2
 294   2                  if(par_model>str_begin.sjwz)
 295   2                      fun_startdj(mot_dj3,-100);
 296   2                  else
 297   2                      fun_startdj(mot_dj3,100);
 298   2                  fun_select(sel_58);
 299   2                  fun_delay(50,del_ms);
 300   2                  while(1){//要去的地方比较靠下,向下走                    
 301   3                      while(in_wz2==1);
 302   3                      fun_delay(20,del_ms);
C51 COMPILER V9.01   8023                                                                  03/04/2015 01:03:44 PAGE 6   

 303   3                      if(in_wz2==0){
 304   4                          fun_delay(str_cod.sj1bzw,del_ms);
 305   4                          break;
 306   4                      }
 307   3                  }
 308   2                  break;
 309   2              case sjp_wz23:
 310   2                  if(par_model>str_begin.sjwz){
 311   3                      fun_sj1(sjp_wz2);
 312   3                      fun_startdj(mot_dj3,-100);
 313   3                      fun_delay(str_cod.sj1zjw,del_ms);
 314   3                  }
 315   2                  else{//要去的地方在上面，向上走
 316   3                      fun_sj1(sjp_wz3);
 317   3                      fun_startdj(mot_dj3,100);
 318   3                      fun_delay(str_cod.sj1zjw,del_ms);
 319   3                  }
 320   2                  break;
 321   2              case sjp_wz3://升降位置3
 322   2                  if(par_model>str_begin.sjwz)
 323   2                      fun_startdj(mot_dj3,-100);
 324   2                  else
 325   2                      fun_startdj(mot_dj3,100);
 326   2                  fun_select(sel_58);
 327   2                  fun_delay(50,del_ms);
 328   2                  while(1){
 329   3                      while(in_wz3==1);
 330   3                      fun_delay(str_cod.sj1bzw,del_ms);
 331   3                      if(in_wz3==0)
 332   3                          break;
 333   3                  }
 334   2                  break;
 335   2              case sjp_wz34:
 336   2                  if(par_model>str_begin.sjwz){
 337   3                      fun_sj1(sjp_wz3);
 338   3                      fun_startdj(mot_dj3,-100);
 339   3                      fun_delay(str_cod.sj1zjw,del_ms);
 340   3                  }
 341   2                  else{//要去的地方在上面，向上走
 342   3                      fun_sj1(sjp_wz4);
 343   3                      fun_startdj(mot_dj3,100);
 344   3                      fun_delay(str_cod.sj1zjw,del_ms);
 345   3                  }
 346   2                  break;
 347   2              case sjp_wz4://升降位置4
 348   2                  if(par_model>str_begin.sjwz)
 349   2                      fun_startdj(mot_dj3,-100);
 350   2                  else
 351   2                      fun_startdj(mot_dj3,100);
 352   2                  fun_select(sel_58);
 353   2                  fun_delay(50,del_ms);
 354   2                  while(1){
 355   3                      while(in_wz4==1);
 356   3                      fun_delay(str_cod.sj1bzw,del_ms);
 357   3                      if(in_wz4==0)
 358   3                          break;
 359   3                  }
 360   2                  break;
 361   2              case sjp_wz45:
 362   2                  if(par_model>str_begin.sjwz){
 363   3                      fun_sj1(sjp_wz4);
 364   3                      fun_startdj(mot_dj3,-100);
C51 COMPILER V9.01   8023                                                                  03/04/2015 01:03:44 PAGE 7   

 365   3                      fun_delay(str_cod.sj1zjw,del_ms);
 366   3                  }
 367   2                  else{//要去的地方在上面，向上走
 368   3                      fun_startdj(mot_dj3,100);
 369   3                      fun_delay(str_cod.sj1zjw,del_ms);
 370   3                  }
 371   2                  break;
 372   2              case sjp_wz5://升降位置5
 373   2                  fun_startdj(mot_dj3,-100);
 374   2                  fun_select(sel_912);
 375   2                  fun_delay(50,del_ms);
 376   2                  while(1){//要去的地方比较靠下,向下走                
 377   3                      while(in_wz5==1);
 378   3                      fun_delay(20,del_ms);
 379   3                      if(in_wz5==0){
 380   4                          fun_delay(str_cod.sj1bzw,del_ms);
 381   4                          break;
 382   4                      }
 383   3                  }
 384   2                  break;
 385   2              default:
 386   2                  break;
 387   2          }
 388   1          fun_stop(mot_dj3);
 389   1          str_begin.sjwz=par_model;//存储运行结果
 390   1      }//升降单步运动
 391          void fun_py1(enum varENU_tra par_model){
 392   1          switch(par_model){
 393   2              case tra_q://前平移(没有电机的呢个方向)
 394   2                  while(1){
 395   3                      fun_startdj(mot_dj2,100);
 396   3                      while(in_qpy==1);
 397   3                      fun_delay(20,del_ms);
 398   3                      if(in_qpy==0){
 399   4                          fun_delay(20,del_ms);
 400   4                          break;
 401   4                      }
 402   3                  }
 403   2                  break;
 404   2              case tra_kq:
 405   2                  switch(str_begin.pywz){
 406   3                      case tra_q:
 407   3                          fun_startdj(mot_dj2,-100);
 408   3                          fun_delay(str_cod.py1qkq,del_ms);
 409   3                          break;
 410   3                      case tra_z:
 411   3                          fun_startdj(mot_dj2,100);
 412   3                          fun_delay(str_cod.py1kqz,del_ms);
 413   3                          break;
 414   3                      case tra_kh:
 415   3                          fun_startdj(mot_dj2,100);
 416   3                          fun_delay(str_cod.py1kqkh,del_ms);
 417   3                          break;
 418   3                      case tra_h:
 419   3                          fun_startdj(mot_dj2,100);
 420   3                          fun_delay(str_cod.py1kqh,del_ms);
 421   3                          break;
 422   3                  }
 423   2                  break;
 424   2              case tra_z:
 425   2                  switch(str_begin.pywz){
 426   3                      case tra_q:
C51 COMPILER V9.01   8023                                                                  03/04/2015 01:03:44 PAGE 8   

 427   3                          fun_startdj(mot_dj2,-100);
 428   3                          fun_delay(str_cod.py1qz,del_ms);
 429   3                          break;
 430   3                      case tra_kq:
 431   3                          fun_startdj(mot_dj2,-100);
 432   3                          fun_delay(str_cod.py1kqz,del_ms);
 433   3                          break;
 434   3                      case tra_kh:
 435   3                          fun_startdj(mot_dj2,100);
 436   3                          fun_delay(str_cod.py1zkh,del_ms);
 437   3                          break;
 438   3                      case tra_h:
 439   3                          fun_startdj(mot_dj2,100);
 440   3                          fun_delay(str_cod.py1zh,del_ms);
 441   3                          break;
 442   3                  }
 443   2                  break;
 444   2              case tra_kh:
 445   2                  switch(str_begin.pywz){
 446   3                      case tra_q:
 447   3                          fun_startdj(mot_dj2,-100);
 448   3                          fun_delay(str_cod.py1qkh,del_ms);
 449   3                          break;
 450   3                      case tra_kq:
 451   3                          fun_startdj(mot_dj2,-100);
 452   3                          fun_delay(str_cod.py1kqkh,del_ms);
 453   3                          break;
 454   3                      case tra_z:
 455   3                          fun_startdj(mot_dj2,-100);
 456   3                          fun_delay(str_cod.py1zkh,del_ms);
 457   3                          break;
 458   3                      case tra_h:
 459   3                          fun_startdj(mot_dj2,100);
 460   3                          fun_delay(str_cod.py1khh,del_ms);
 461   3                          break;
 462   3                  }
 463   2                  break;
 464   2              case tra_h://后平移(有电机的呢个方向)
 465   2                  while(1){
 466   3                      fun_startdj(mot_dj2,-100);
 467   3                      while(in_hpy==1);
 468   3                      fun_delay(20,del_ms);
 469   3                      if(in_hpy==0){
 470   4                          fun_delay(20,del_ms);
 471   4                          break;
 472   4                      }
 473   3                  }
 474   2                  break;
 475   2              default:
 476   2                  break;
 477   2          }
 478   1          fun_stop(mot_dj2);
 479   1          str_begin.pywz=par_model;//存储运行结果
 480   1      }//平移单步运动
 481          void fun_hz1(enum varENU_dir par_model){
 482   1          switch(par_model){
 483   2              case dir_up://回转至前方
 484   2                  switch(str_begin.hzfx){
 485   3                      case dir_down://现在在下方
 486   3                          fun_startdj(mot_dj4,-100);
 487   3                          fun_select(sel_912);
 488   3                          fun_delay(1,del_s);
C51 COMPILER V9.01   8023                                                                  03/04/2015 01:03:44 PAGE 9   

 489   3                          while(1){
 490   4                              while(in_hz==1);
 491   4                              fun_delay(25,del_ms);
 492   4                              if(in_hz==0)
 493   4                                  break;
 494   4                          }
 495   3                          while(1){
 496   4                              while(in_hz==0);
 497   4                              fun_delay(25,del_ms);
 498   4                              if(in_hz==1)
 499   4                                  break;
 500   4                          }
 501   3                          while(1){
 502   4                              while(in_hz==1);
 503   4                              fun_delay(25,del_ms);
 504   4                              if(in_hz==0)
 505   4                                  break;
 506   4                          }
 507   3                          break;
 508   3                      case dir_left://现在在左边
 509   3                          fun_startdj(mot_dj4,100);
 510   3                          fun_select(sel_912);
 511   3                          fun_delay(1,del_s);
 512   3                          while(1){
 513   4                              while(in_hz==1);
 514   4                              fun_delay(25,del_ms);
 515   4                              if(in_hz==0)
 516   4                                  break;
 517   4                          }
 518   3                          break;
 519   3                      case dir_right://现在在右边
 520   3                          fun_startdj(mot_dj4,-100);
 521   3                          fun_select(sel_912);
 522   3                          fun_delay(1,del_s);
 523   3                          while(1){
 524   4                              while(in_hz==1);
 525   4                              fun_delay(25,del_ms);
 526   4                              if(in_hz==0)
 527   4                                  break;
 528   4                          }
 529   3                          break;
 530   3                      default:
 531   3                          break;
 532   3                  }
 533   2                  break;
 534   2              case dir_down://要去下面
 535   2                  switch(str_begin.hzfx){
 536   3                      case dir_up://现在在上面
 537   3                          fun_startdj(mot_dj4,100);
 538   3                          fun_select(sel_912);
 539   3                          fun_delay(1,del_s);
 540   3                          while(1){
 541   4                              while(in_hz==1);
 542   4                              fun_delay(25,del_ms);
 543   4                              if(in_hz==0)
 544   4                                  break;
 545   4                          }
 546   3                          while(1){
 547   4                              while(in_hz==0);
 548   4                              fun_delay(25,del_ms);
 549   4                              if(in_hz==1)
 550   4                                  break;
C51 COMPILER V9.01   8023                                                                  03/04/2015 01:03:44 PAGE 10  

 551   4                          }
 552   3                          while(1){
 553   4                              while(in_hz==1);
 554   4                              fun_delay(25,del_ms);
 555   4                              if(in_hz==0)
 556   4                                  break;
 557   4                          }
 558   3                          break;
 559   3                      case dir_left://现在在左面
 560   3                          fun_startdj(mot_dj4,-100);
 561   3                          fun_select(sel_912);
 562   3                          fun_delay(1,del_s);
 563   3                          while(1){
 564   4                              while(in_hz==1);
 565   4                              fun_delay(25,del_ms);
 566   4                              if(in_hz==0)
 567   4                                  break;
 568   4                          }
 569   3                          break;
 570   3                      case dir_right://现在在右面
 571   3                          fun_startdj(mot_dj4,100);
 572   3                          fun_select(sel_912);
 573   3                          fun_delay(1,del_s);
 574   3                          while(1){
 575   4                              while(in_hz==1);
 576   4                              fun_delay(25,del_ms);
 577   4                              if(in_hz==0)
 578   4                                  break;
 579   4                          }
 580   3                          break;
 581   3                      default:
 582   3                          break;
 583   3                  }
 584   2                  break;
 585   2              case dir_left://要去左边
 586   2                  switch(str_begin.hzfx){
 587   3                      case dir_up://现在在上面
 588   3                          fun_startdj(mot_dj4,-100);
 589   3                          fun_select(sel_912);
 590   3                          fun_delay(1,del_s);
 591   3                          while(1){
 592   4                              while(in_hz==1);
 593   4                              fun_delay(25,del_ms);
 594   4                              if(in_hz==0)
 595   4                                  break;
 596   4                          }
 597   3                          break;
 598   3                      case dir_down://现在在下面
 599   3                          fun_startdj(mot_dj4,100);
 600   3                          fun_select(sel_912);
 601   3                          fun_delay(1,del_s);
 602   3                          while(1){
 603   4                              while(in_hz==1);
 604   4                              fun_delay(25,del_ms);
 605   4                              if(in_hz==0)
 606   4                                  break;
 607   4                          }
 608   3                          break;
 609   3                      case dir_right://现在在右面
 610   3                          fun_startdj(mot_dj4,-100);
 611   3                          fun_select(sel_912);
 612   3                          fun_delay(1,del_s);
C51 COMPILER V9.01   8023                                                                  03/04/2015 01:03:44 PAGE 11  

 613   3                          while(1){
 614   4                              while(in_hz==1);
 615   4                              fun_delay(25,del_ms);
 616   4                              if(in_hz==0)
 617   4                                  break;
 618   4                          }
 619   3                          while(1){
 620   4                              while(in_hz==0);
 621   4                              fun_delay(25,del_ms);
 622   4                              if(in_hz==1)
 623   4                                  break;
 624   4                          }
 625   3                          while(1){
 626   4                              while(in_hz==1);
 627   4                              fun_delay(25,del_ms);
 628   4                              if(in_hz==0){
 629   5                                  break;
 630   5                              }
 631   4                          }
 632   3                          break;
 633   3                      default:
 634   3                          break;
 635   3                  }
 636   2                  break;
 637   2              case dir_right://要去右面
 638   2                  switch(str_begin.hzfx){
 639   3                      case dir_up://现在在前面
 640   3                          fun_startdj(mot_dj4,100);
 641   3                          fun_select(sel_912);
 642   3                          fun_delay(1,del_s);
 643   3                          while(1){
 644   4                              while(in_hz==1);
 645   4                              fun_delay(25,del_ms);
 646   4                              if(in_hz==0)
 647   4                                  break;
 648   4                          }
 649   3                          break;
 650   3                      case dir_down://现在在下面
 651   3                          fun_startdj(mot_dj4,-100);
 652   3                          fun_select(sel_912);
 653   3                          fun_delay(1,del_s);
 654   3                          while(1){
 655   4                              while(in_hz==1);
 656   4                              fun_delay(25,del_ms);
 657   4                              if(in_hz==0)
 658   4                                  break;
 659   4                          }
 660   3                          break;
 661   3                      case dir_left://现在在左面
 662   3                          fun_startdj(mot_dj4,100);
 663   3                          fun_select(sel_912);
 664   3                          fun_delay(1,del_s);
 665   3                          while(1){
 666   4                              while(in_hz==1);
 667   4                              fun_delay(25,del_ms);
 668   4                              if(in_hz==0)
 669   4                                  break;
 670   4                          }
 671   3                          while(1){
 672   4                              while(in_hz==0);
 673   4                              fun_delay(25,del_ms);
 674   4                              if(in_hz==1)
C51 COMPILER V9.01   8023                                                                  03/04/2015 01:03:44 PAGE 12  

 675   4                                  break;
 676   4                          }
 677   3                          while(1){
 678   4                              while(in_hz==1);
 679   4                              fun_delay(25,del_ms);
 680   4                              if(in_hz==0){
 681   5                                  break;
 682   5                              }
 683   4                          }
 684   3                          break;
 685   3                      default:
 686   3                          break;
 687   3                  }
 688   2                  break;
 689   2              default:
 690   2                  break;
 691   2          }
 692   1          fun_stop(mot_dj4);
 693   1          str_begin.hzfx=par_model;//存储运行结果
 694   1      }//回转单步运动
 695          void fun_mptline(uc par_num,uc par_sd,enum varENU_dir par_model){
 696   1          bit loc_flag=0;
 697   1          ui loc_i;
 698   1          uc loc_con=0;
 699   1          uc loc_l=par_sd,loc_r=par_sd;
 700   1          for(loc_i=2;loc_i<par_sd;fun_startdj(mot_rl,loc_i++))//软起动
 701   1              fun_delay(str_cod.mlinerqd/par_sd,del_ms);
 702   1          while(1){
 703   2              loc_l=par_sd;//恢复默认参数
 704   2              loc_r=par_sd;
 705   2              if((in_ls1&&in_ls7)||(in_ls2&&in_ls8)){//巡线计数
 706   3                  loc_flag=1;
 707   3                  if(loc_con>=par_num){
 708   4                      if(par_model==dir_left){//左转
 709   5                          fun_startdj(mot_l,-20);
 710   5                          fun_delay(500,del_ms);
 711   5                          while(1){
 712   6                              while(!in_ls4||!in_ls5);
 713   6                              fun_delay(100,del_us);
 714   6                              if(in_ls4&&in_ls5){
 715   7                                  fun_stop(mot_rl);
 716   7                                  return;
 717   7                              }
 718   6                          }
 719   5                      }
 720   4                      else if(par_model==dir_right){
 721   5                          fun_startdj(mot_r,-20);
 722   5                          fun_delay(500,del_ms);
 723   5                          while(1){
 724   6                              while(!in_ls4||!in_ls5);
 725   6                              fun_delay(100,del_us);
 726   6                              if(in_ls4&&in_ls5){
 727   7                                  fun_stop(mot_rl);
 728   7                                  return;
 729   7                              }
 730   6                          }
 731   5                      }
 732   4                  }
 733   3              }
 734   2              else if(loc_flag==1){
 735   3                  if(++loc_con>=par_num){
 736   4                      if(par_model==dir_up){
C51 COMPILER V9.01   8023                                                                  03/04/2015 01:03:44 PAGE 13  

 737   5                          for(loc_i=0;loc_i<str_cod.mlineqc;loc_i++){
 738   6                              loc_l=par_sd*0.7;//恢复默认参数
 739   6                              loc_r=par_sd*0.7;
 740   6                              if(in_ls3){//纠偏
 741   7                                  loc_l*=0.9;
 742   7                                  loc_r*=1.1;
 743   7                              }
 744   6                              if(in_ls6){
 745   7                                  loc_l*=1.1;
 746   7                                  loc_r*=0.9;
 747   7                              }
 748   6                              if(in_ls2){
 749   7                                  loc_l*=0.8;
 750   7                                  loc_r*=1.2;
 751   7                              }
 752   6                              if(in_ls7){
 753   7                                  loc_l*=1.2;
 754   7                                  loc_r*=0.8;
 755   7                              }
 756   6                              if(in_ls1){
 757   7                                  loc_l*=0.7;
 758   7                                  loc_r*=1.3;
 759   7                              }
 760   6                              if(in_ls8){
 761   7                                  loc_l*=1.3;
 762   7                                  loc_r*=0.7;
 763   7                              }
 764   6                              fun_startdj(mot_l,loc_l);//更新电机参数
 765   6                              fun_startdj(mot_r,loc_r);
 766   6                              fun_delay(1,del_ms);
 767   6                          }
 768   5                          fun_stop(mot_rl);
 769   5                          return;
 770   5                      }
 771   4                  }
 772   3                  loc_flag=0;
 773   3              }
 774   2              if(in_ls3){//纠偏
 775   3                  loc_l*=0.9;
 776   3                  loc_r*=1.1;
 777   3              }
 778   2              if(in_ls6){
 779   3                  loc_l*=1.1;
 780   3                  loc_r*=0.9;
 781   3              }  
 782   2              if(in_ls2){
 783   3                  loc_l*=0.8;
 784   3                  loc_r*=1.2;
 785   3              }
 786   2              if(in_ls7){
 787   3                  loc_l*=1.2;
 788   3                  loc_r*=0.8;
 789   3              }
 790   2              if(in_ls1){
 791   3                  loc_l*=0.7;
 792   3                  loc_r*=1.3;
 793   3              }
 794   2              if(in_ls8){
 795   3                  loc_l*=1.3;
 796   3                  loc_r*=0.7;
 797   3              }
 798   2              fun_startdj(mot_l,loc_l);//更新电机参数
C51 COMPILER V9.01   8023                                                                  03/04/2015 01:03:44 PAGE 14  

 799   2              fun_startdj(mot_r,loc_r);
 800   2          }
 801   1      }//主函数普通巡线
 802          void fun_stope2prom(){
 803   1          IAP_CONTR = 0;                  //关闭IAP功能
 804   1          IAP_CMD = 0;                    //清除命令
 805   1          IAP_TRIG = 0;                   //清除触发寄存器
 806   1          IAP_ADDRH = 0x80;               //数据指针指向非EEPROM区
 807   1          IAP_ADDRL = 0;                  //清除IAP地址
 808   1      }//关闭EEPROM功能(IapIdle)
 809          uc fun_reade2prom(ui par_add){
 810   1          uc loc_dat;                     //数据缓冲区
 811   1          IAP_CONTR = 0x83;               //打开EEPROM功能,设置等待时间
 812   1          IAP_CMD = 1;                    //设置EEPROM读命令
 813   1          IAP_ADDRL = par_add;            //设置EEPROM地址低八位
 814   1          IAP_ADDRH = par_add >> 8;       //设置EEPROM地址高八位
 815   1          IAP_TRIG = 0x5a;                //触发
 816   1          IAP_TRIG = 0xa5;                //再次触发
 817   1          fun_delay(10,del_us);           //稍等一会儿
 818   1          loc_dat = IAP_DATA;             //读出EEPROM中的数据
 819   1          fun_stope2prom();               //关闭EEPROM功能
 820   1          return loc_dat;                 //返回读取结果
 821   1      }//读取EEPROM数据
 822          void fun_writee2prom(ui par_add,uc par_dat){
 823   1          IAP_CONTR = 0x83;               //打开EEPROM功能,设置等待时间
 824   1          IAP_CMD = 2;                    //设置EEPROM写入命令
 825   1          IAP_ADDRL = par_add;            //设置EEPROM地址低八位
 826   1          IAP_ADDRH = par_add >> 8;       //设置EEPROM地址高八位
 827   1          IAP_DATA = par_dat;             //写入数据
 828   1          IAP_TRIG = 0x5a;                //触发
 829   1          IAP_TRIG = 0xa5;                //再次触发
 830   1          fun_delay(10,del_us);           //稍等一会儿
 831   1          fun_stope2prom();               //关闭EEPROM功能
 832   1      }//写EEPROM数据
 833          void fun_cleane2prom(ui par_add){
 834   1          IAP_CONTR = 0x83;               //打开EEPROM功能,设置等待时间
 835   1          IAP_CMD = 3;                    //设置EEPROM擦除命令
 836   1          IAP_ADDRL = par_add;            //设置EEPROM地址低八位
 837   1          IAP_ADDRH = par_add >> 8;       //设置EEPROM地址高八位
 838   1          IAP_TRIG = 0x5a;                //触发
 839   1          IAP_TRIG = 0xa5;                //再次触发
 840   1          fun_delay(10,del_us);           //稍等一会儿
 841   1          fun_stope2prom();               //关闭EEPROM功能
 842   1      }//清除EEPROM数据
 843          void fun_calibration(){
 844   1          // fun_sj1(sjp_wz1);//升到最上位
 845   1          fun_py1(tra_q);//移动到最前端
 846   1          fun_py1(tra_h);//移动到最后端
 847   1          def_timer0start//开始定时器
 848   1          fun_py1(tra_q);//移动到前端并计时
 849   1          fun_py1(tra_h);//移动到后端
 850   1          def_timer0stop//停止定时器
 851   1          var_timer0*=0.39;
 852   1      
 853   1          str_cod.py1zh=str_cod.py1qz=var_timer0*0.5;
 854   1          str_cod.py1qkh=str_cod.py1kqh=var_timer0*0.75;
 855   1          OUT(var_timer0)
 856   1      }//自动校准参数
 857          void fun_port(){
 858   1          PCON|=0x80;       //使能波特率倍速位SMOD
 859   1          SCON=0x50;        //8位数据,可变波特率
 860   1          AUXR|=0x04;       //独立波特率发生器时钟为Fosc,即1T
C51 COMPILER V9.01   8023                                                                  03/04/2015 01:03:44 PAGE 15  

 861   1          BRT=0xD9;     //设定独立波特率发生器重装值
 862   1          AUXR|=0x01;       //串口1选择独立波特率发生器为波特率发生器
 863   1          AUXR|=0x10;       //启动独立波特率发生器
 864   1          TI=1;//打开串口传输功能
 865   1      }//串口初始化


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   3247    ----
   CONSTANT SIZE    =      5    ----
   XDATA SIZE       =     47    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      2      16
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       1
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
